{"version":3,"sources":["layouts/Header.js","layouts/Navigation.js","stores/configureStore.js","services/ApiQueryService.ts","services/DictionaryService.ts","services/UsersService.tsx","components/UserProfileComponent.tsx","pages/ProfilePage.tsx","services/FriendshipService.ts","components/UserComponent.tsx","components/UserFriendshipActionComponent.tsx","components/FriendComponent.tsx","pages/FriendsPage.tsx","services/MessagesService.ts","components/ConversationsComponent.tsx","pages/MessagesPage.tsx","services/dto/SearchQueryDto.ts","components/FinderBasicFieldsComponent.js","services/SearchUsersService.tsx","components/SearchResultComponent.tsx","pages/SearchPage.tsx","services/AuthenticationService.ts","pages/LoginPage.tsx","components/InterestsDisplayComponent.tsx","components/DictionaryFieldReadComponent.tsx","components/UserDetailsComponent.tsx","pages/UserDetailsPage.tsx","components/SendMessageComponent.tsx","pages/ConversationPage.tsx","layouts/Page.js","layouts/App.js","index.js"],"names":["Header","list","name","path","exact","Navigation","menu","map","item","key","to","className","defaultLoginState","loginInfo","loggedIn","identity","apiKey","store","createStore","state","action","type","data","ApiQueryService","getState","address","id","undefined","replace","toString","endpoint","dto","this","GetApiKey","console","log","header","Headers","append","fetch","method","headers","body","JSON","stringify","then","result","ok","Error","statusText","catch","err","res","status","json","ApiEndpoint","DictionaryService","InterestsEnd","HairColorsEnd","EyesColorsEnd","GetAllInterest","GetDictionaryItems","GetAllEyesColors","GetAllHairColors","get","UsersService","usersEnd","getAllUsersEnd","getManyUsersEnd","getUserEnd","patchUserEnd","deleteUserEnd","postUserEnd","getUserDetailsEnd","putUserDetailsEnd","putAvatar","putAvatarBase64","getUsersAvatars","ids","postSpecific","BuildAddress","userDto","patch","GetIdentity","generateDictionaryFields","choosenId","dictionary","onchange","fields","value","displayName","choosenItem","find","x","onChange","UserProfileComponent","props","eyesColorsFields","hairColorFields","userFullDto","eyesColors","hairColors","interests","onFieldChange","onDictionaryFieldChange","onDateFieldChange","onSave","userBasicDto","basic","userDetailsDto","details","length","interestsFields","selectFieldEyesColor","eyesColor","selectFieldHairColor","hairColor","selectGenderField","gender","optionFields","text","select","toLocaleLowerCase","generateGenderField","interestsDictItems","isChecked","boolValue","checked","style","display","width","margin","htmlFor","region","city","selected","birthDate","heigth","tatoos","onClick","ProfilePage","usersService","dictionaryService","_isMounted","_interestsLoaded","_eyesColorsLoaded","_hairColorsLoaded","_basicLoaded","_detailsLoaded","Array","selectedInterests","getLoggedUserData","loggedUserId","getUserBasic","basicDto","Date","setState","getUserDetais","detailsDto","getDictionariesValues","service","e","toJSON","target","startsWith","substring","selectedItems","push","filter","patchtUserBasic","patchUserDetails","React","Component","connect","FriendshipService","FriendshipQueryEndpoint","GetFriendsListEnd","GetFriendshipisRequestsEnd","GetPossibleActionEnd","SendInvitationEnd","SetFriendshipStatusEnd","GetFriendshipStatusNend","userId","fromUserId","toUserId","put","user1Id","user2Id","GetFriendshipStatus","toLowerCase","UserComponent","calculateAge","birthday","ageDifMs","now","ageDate","Math","abs","getUTCFullYear","user","slice","parse","UserWithLink","userDetailsLink","UserFriendshipActionComponent","friendshipStatus","friendshipService","removeFriend","RemoveFriend","callBack","addToFriends","SendInvitation","acceptFriendship","AcceptFriendship","getUserFriendshipsActions","friendButton","actionBtn","FriendComponent","FriendsPage","_isMsounted","friends","invitations","friendsService","getFriends","GetFriendsList","getManyUsers","getInvitations","GetFriendshipsRequestsList","userStyle","border","friendsList","bind","invitationsList","MessagesService","MessagesEndp","ConversationsEndp","SpeakersEndp","WholeConversationEndp","MessageMarkReadEndp","MessageMarkUnreadEndp","speakerId","firstUserId","secondUserId","receiverId","content","senderId","post","ConversationsComponent","messageStyle","color","backgroundColor","padding","fontFamily","a","convs","conversations","linkToConversation","messageDate","speakerName","messageShortContent","MessagesPage","lastMessagesIntervalId","getLastMessage","GetLastMessages","componentWillUnmount","clearInterval","setInterval","SearchQueryDto","agefrom","ageto","heightfrom","heightto","widthfrom","widthto","interestids","haircolor","eyescolor","isonline","FinderBasicFieldsComponent","query","SearchUsersService","postUserFindEnd","SearchResultComponent","usersList","users","SearchPage","queryDto","searchResult","searchService","searchUsers","hairColorsFields","interestsIds","searchResponse","AuthenticationService","loginEndpotint","registerEndpoint","identityEndpoint","response","resp","LoginPage","apiQueryService","login","password","authFailed","handleLogin","Password","UserName","authService","LoginUser","dispatch","handleLogout","handleFieldChanged","loggedFailedInfo","loginProps","InterestDisplayComponent","userInterests","dataFilled","getInterstsData","userInterstsIds","indexOf","dictionaryItem","DictionaryFieldReadComponent","dictionaryItems","concat","itemId","displayResult","itemName","UserDetailsComponent","userInterest","UserDetailsPage","match","params","SendMessageComponent","message","sendMessage","SendMessage","contentChanged","height","ConversationPage","conversationIntervalId","conversation","speaker","getGonversation","GetConversation","userService","linkToUser","messages","sendDate","senderName","Page","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9939f804.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () =>{\r\n    return(\r\n        <>\r\n            <h3>Randevou Api REACT client</h3>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"../styles/Navigation.css\";\r\n\r\nconst list = [\r\n  { name: \"Home\", path: \"/\", exact: true },\r\n  { name: \"Messages\", path: \"/messages\" },\r\n  { name: \"Friends\", path: \"/friends\" },\r\n  { name: \"Search\", path: \"/search\" },\r\n  { name: \"Login\", path: \"/login\"},\r\n]\r\n\r\nconst Navigation = () => {\r\n\r\n  const menu = list.map(item => (\r\n    <li key={item.name}>\r\n      <NavLink to={item.path} exact={item.exact ? item.exact : false}>{item.name}</NavLink>\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <nav className=\"main\">\r\n      <ul>\r\n        {menu}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import {createStore} from 'redux';\r\n\r\nvar defaultLoginState={\r\n    loginInfo : {\r\n        loggedIn: false,\r\n        identity: '',\r\n        apiKey: '',\r\n    }\r\n    \r\n}\r\n\r\nfunction updateLoginInfo(state = defaultLoginState, action){\r\n    if(action.type=== 'LOGIN_SUCCESSFUL'){\r\n        debugger;\r\n        return{\r\n            ...state,\r\n            loginInfo : {\r\n                loggedIn : true,\r\n                identity: action.data.identity,\r\n                apiKey: action.data.apiKey,\r\n            }\r\n        }\r\n    }\r\n    else if(action.type === 'LOGOUT'){\r\n        debugger;\r\n        return{\r\n            ...state,\r\n            loginInfo : {\r\n                loggedIn : false,\r\n                identity: '',\r\n                apiKey: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nvar store = createStore(updateLoginInfo);\r\nexport default store;","import store from \"../stores/configureStore\";\r\n\r\nexport class ApiQueryService {\r\n  static ApiEndpoint = \"https://randevou.azurewebsites.net\";\r\n\r\n  GetIdentity(): string {\r\n    return store.getState().loginInfo.identity;\r\n  }\r\n\r\n  BuildAddress(address: string, id?: number): string {\r\n    if (id == null && id === undefined) {\r\n      return address;\r\n    }\r\n\r\n    address = address.replace(\"{id}\", id.toString());\r\n    return address;\r\n  }\r\n\r\n  GetApiKey() {\r\n    return store.getState().loginInfo.apiKey;\r\n  }\r\n\r\n  patch(endpoint: string, dto) {\r\n    let apiKey = this.GetApiKey();\r\n    if (apiKey === null) apiKey = \"\";\r\n\r\n    console.log(endpoint);\r\n    const header = new Headers();\r\n    header.append(\"Content-Type\", \"application/json\");\r\n    header.append(\"Authorization\", apiKey);\r\n\r\n    return fetch(endpoint, {\r\n      method: \"PATCH\",\r\n      headers: header,\r\n      body: JSON.stringify(dto),\r\n    })\r\n      .then((result) => {\r\n        if (!result.ok) {\r\n          Error(result.statusText);\r\n        }\r\n      })\r\n      .catch((err) => Error(err));\r\n  }\r\n\r\n  get<T>(endpoint: string): Promise<T> {\r\n    let apiKey = this.GetApiKey();\r\n    if (apiKey === null) apiKey = \"\";\r\n\r\n    const header = new Headers();\r\n    header.append(\"Content-Type\", \"application/json\");\r\n    header.append(\"Authorization\", apiKey);\r\n    return fetch(endpoint, {\r\n      method: \"Get\",\r\n      headers: header,\r\n    })\r\n      .then((res) => {\r\n        if (!res.ok || res.status === 204) {\r\n          throw Error(\"Nie udało się pobrać użyszkodnika\");\r\n        }\r\n        return res.json().then((result) => {\r\n          return result as Promise<T>;\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        throw Error(err);\r\n      });\r\n  }\r\n\r\n  postSpecific<TResult>(endpoint: string, body: any): Promise<TResult> {\r\n    let apiKey = this.GetApiKey();\r\n    if (apiKey === null) apiKey = \"\";\r\n\r\n    const header = new Headers();\r\n    header.append(\"Content-Type\", \"application/json\");\r\n    header.append(\"Authorization\", apiKey);\r\n    return fetch(endpoint, {\r\n      method: \"Post\",\r\n      headers: header,\r\n      body: JSON.stringify(body),\r\n    }).then((result) => {\r\n      return result.json().then((result) => {\r\n        return result as TResult;\r\n      });\r\n    });\r\n  }\r\n\r\n  post(endpoint: string, body: any): Promise<Response> {\r\n    let apiKey = this.GetApiKey();\r\n    if (apiKey === null) apiKey = \"\";\r\n\r\n    const header = new Headers();\r\n    header.append(\"Content-Type\", \"application/json\");\r\n    header.append(\"Authorization\", apiKey);\r\n    return fetch(endpoint, {\r\n      method: \"Post\",\r\n      headers: header,\r\n      body: JSON.stringify(body),\r\n    });\r\n  }\r\n\r\n  put(endpoint: string, body: any): Promise<Response> {\r\n    let apiKey = this.GetApiKey();\r\n    if (apiKey === null) apiKey = \"\";\r\n\r\n    const header = new Headers();\r\n    header.append(\"Content-Type\", \"application/json\");\r\n    header.append(\"Authorization\", apiKey);\r\n\r\n    return fetch(endpoint, {\r\n      method: \"Put\",\r\n      headers: header,\r\n      body: JSON.stringify(body),\r\n    }).then((res) => {\r\n      if (!res.ok) {\r\n        console.log(\"Nie udało się wysłać zaproszenia\");\r\n        console.log(res.json());\r\n      }\r\n      return res;\r\n    });\r\n  }\r\n}\r\n","import { ApiQueryService } from \"./ApiQueryService\";\r\nimport DictionaryItemDto from \"./dto/DictionaryItemDto\";\r\n\r\nclass DictionaryService extends ApiQueryService{\r\n\r\n    InterestsEnd = ApiQueryService.ApiEndpoint + '/api/UserDictItems/Interest';\r\n    HairColorsEnd = ApiQueryService.ApiEndpoint + '/api/UserDictItems/HairColors';\r\n    EyesColorsEnd = ApiQueryService.ApiEndpoint + '/api/UserDictItems/EyesColors';\r\n\r\n    GetDictionaryItems(endpoint:string):Promise<DictionaryItemDto[]>{\r\n        return this.get<DictionaryItemDto[]>(endpoint);\r\n    }\r\n    GetAllInterest = () => {\r\n        return this.GetDictionaryItems(this.InterestsEnd);\r\n    }\r\n\r\n    GetAllEyesColors = () => {\r\n        return this.GetDictionaryItems(this.EyesColorsEnd);\r\n    }\r\n\r\n    GetAllHairColors = () =>{\r\n        return this.GetDictionaryItems(this.HairColorsEnd);\r\n    }\r\n}\r\n\r\nexport default DictionaryService;","import { ApiQueryService } from \"./ApiQueryService\";\r\nimport { UserDto, UserDetailsDto } from \"./dto/UsersDto\";\r\n\r\nexport class UsersService extends ApiQueryService{\r\n\r\n  usersEnd = ApiQueryService.ApiEndpoint + '/api/Users';\r\n  getAllUsersEnd = this.usersEnd;\r\n  getManyUsersEnd = this.usersEnd + '/List';\r\n  getUserEnd = this.usersEnd + '/{id}';\r\n  patchUserEnd = this.usersEnd;\r\n  deleteUserEnd = this.usersEnd + '/{id}';\r\n  postUserEnd = this.usersEnd;\r\n  \r\n\r\n  getUserDetailsEnd = this.getUserEnd + '/Details';\r\n  putUserDetailsEnd = this.patchUserEnd + '/{id}/Details';\r\n  putAvatar = this.patchUserEnd + '/{id}/Details/avatar';\r\n  putAvatarBase64 = this.putAvatar + '/base64';\r\n  getUsersAvatars = this.getManyUsersEnd + '/Avatars/base64img';\r\n\r\n  getManyUsers(ids:Array<Number>):Promise<UserDto[]>{\r\n    return this.postSpecific<UserDto[]>(this.getManyUsersEnd, ids);\r\n    }\r\n\r\n    getUserDetais(id:number){\r\n        return this.get<UserDetailsDto>(this.BuildAddress(this.getUserDetailsEnd,id)); \r\n    }\r\n\r\n    getUserBasic(id:number):Promise<UserDto> {\r\n        return this.get<UserDto>(this.BuildAddress(this.getUserEnd,id)); \r\n    }\r\n         \r\n    patchtUserBasic(userDto: UserDto){\r\n        this.patch(this.BuildAddress(this.patchUserEnd), userDto);\r\n    }\r\n\r\n    patchUserDetails(dto:UserDetailsDto){\r\n        this.patch(this.BuildAddress(this.putUserDetailsEnd,+this.GetIdentity()), dto);\r\n    }\r\n}","import React from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DictionaryItemDto from '../services/dto/DictionaryItemDto';\r\nimport { UserDetailsDto, UserDto } from '../services/dto/UsersDto';\r\n\r\n\r\n\r\nconst generateDictionaryFields = (name: string, choosenId:number, dictionary:DictionaryItemDto[], onchange)=>{\r\n    let fields;\r\n    \r\n    let selectFieldItem = (<></>);\r\n       \r\n\r\n        fields = dictionary.map(item=>\r\n            (\r\n                <option key={item.id} value={item.id}> {item.displayName} </option>\r\n            )  \r\n        );\r\n        const choosenItem = dictionary.find(x=>x.id == choosenId);\r\n   \r\n        if(choosenItem !== undefined){\r\n        selectFieldItem = (\r\n            <>\r\n             <select id={name} name={name} value={choosenItem?.id}  onChange={onchange}>\r\n            {fields}\r\n            </select>\r\n            </>\r\n        )\r\n        }\r\n        else{\r\n            selectFieldItem = ( <select id={name} name={name}  onChange={onchange}> {fields}</select>)\r\n        }\r\n\r\n        return selectFieldItem;\r\n}\r\n\r\nconst generateGenderField = (gender:string, onChange) => {\r\n\r\n    const genders = [\r\n        {\r\n            key:\"m\",text:\"male\"\r\n        },\r\n        {\r\n            key:\"f\",text:\"female\"\r\n        }\r\n    ]\r\n    let optionFields = genders.map(x=>{\r\n        return(\r\n            <option key={x.key} value={x.key}>{x.text}</option>\r\n        );\r\n    })\r\n        \r\n    let  select = (<select/>)\r\n    switch(gender.toLocaleLowerCase()){\r\n        case \"male\":case \"m\" :\r\n            select = (<select id=\"gender\" name=\"gender\" value=\"m\" onChange={onChange}>{optionFields}</select>);\r\n            break;\r\n        case \"female\": case \"f\":\r\n            select = (<select id=\"gender\" name=\"gender\" value=\"f\" onChange={onChange}>{optionFields}</select>);\r\n            break;\r\n        default:\r\n            select = (<select id=\"gender\" name=\"gender\" onChange={onChange}>{optionFields}</select>);\r\n            break;\r\n    }\r\n    return select;\r\n}\r\n\r\nconst UserProfileComponent = (props) => {\r\n    const {userFullDto,eyesColors, hairColors, interests,onFieldChange, onDictionaryFieldChange,onDateFieldChange, onSave} = props;\r\n    const userBasicDto = userFullDto.basic as UserDto;\r\n    const userDetailsDto = userFullDto.details as UserDetailsDto\r\n\r\n    let eyesColorsFields;\r\n    if(eyesColors.length >0){\r\n        eyesColorsFields = eyesColors.map(item=>\r\n            (\r\n                <option key={item.id} value={item.id}> {item.displayName} </option>\r\n            )  \r\n        );\r\n    }\r\n    let hairColorFields;\r\n    if(hairColors.length >0){\r\n        hairColorFields = hairColors.map(item=>\r\n            (\r\n                <option key={item.id} value={item.id}> {item.displayName} </option>\r\n            )  \r\n        );\r\n    }\r\n    let selectFieldEyesColor = userDetailsDto.eyesColor !== undefined ?\r\n    generateDictionaryFields(\"eyesColor\",userDetailsDto.eyesColor,eyesColors, onDictionaryFieldChange)\r\n      : (<select id=\"eyesColor\" name=\"eyesColor\"  onChange={onDictionaryFieldChange}> {eyesColorsFields}</select>)\r\n\r\n    let selectFieldHairColor = userDetailsDto.hairColor !== undefined?\r\n    generateDictionaryFields(\"hairColor\",userDetailsDto.hairColor,hairColors, onDictionaryFieldChange)\r\n      : (<select id=\"hairColor\" name=\"hairColor\"  onChange={onDictionaryFieldChange}> {hairColorFields}</select>)\r\n  \r\n      let selectGenderField = generateGenderField(userBasicDto.gender ?? '', onDictionaryFieldChange);\r\n\r\n    let interestsFields;\r\n\r\n    const interestsDictItems = interests as DictionaryItemDto[];\r\n    if(interestsDictItems.length >0){\r\n        interestsFields = interestsDictItems.map(item=>{\r\n            let isChecked = item.boolValue  || userDetailsDto.interests?.find(x=>x === item.id) !== undefined;\r\n\r\n            return (\r\n                <label key={item.name}>\r\n                    <input type=\"checkbox\" key={item.name} name={item.id+''} checked={isChecked} onChange={onDictionaryFieldChange}  /> \r\n                    {item.displayName}\r\n                </label>\r\n            )\r\n        }\r\n        )\r\n    }\r\n\r\n    const profileStyle={\r\n        display: 'inline-grid',\r\n        width:'35%',\r\n        margin:'10px',\r\n \r\n    }\r\n\r\n    return (  \r\n        <div style={profileStyle}>\r\n           <label htmlFor=\"userName\">Nazwa wyświetlana użytkownika</label>\r\n            <input type=\"text\" id=\"name\" name=\"basic_name\" value={userBasicDto.displayName} onChange={onFieldChange} />\r\n\r\n            <label htmlFor=\"region\">Województwo</label>\r\n            <input type=\"text\" id=\"region\" name=\"region\" value={userDetailsDto.region} onChange={onFieldChange} />\r\n\r\n            <label htmlFor=\"city\">Miasto</label>\r\n            <input type=\"text\" id=\"city\" name=\"city\" value={userDetailsDto.city} onChange={onFieldChange}  />\r\n\r\n\r\n            <label htmlFor=\"age\">Data urodzenia</label>\r\n            <DatePicker name=\"basic_birthdate\" selected={userFullDto.birthDate} onChange={onDateFieldChange} />\r\n\r\n            <label htmlFor=\"width\">Wzrost</label>\r\n            <input type=\"text\" id=\"width\" name=\"width\"value={userDetailsDto.width} onChange={onFieldChange}  />\r\n\r\n\r\n            <label htmlFor=\"heigthFrom\">Waga</label>\r\n            <input type=\"text\" id=\"heigth\" name=\"heigth\" value={userDetailsDto.heigth} onChange={onFieldChange}  />\r\n\r\n            <label htmlFor=\"gender\">Płeć</label>\r\n            {selectGenderField}\r\n            \r\n\r\n            <label htmlFor=\"tattos\">Tatuaże</label>\r\n            <input type=\"text\" id=\"tatoos\" name=\"tatoos\" value={userDetailsDto.tatoos} onChange={onFieldChange}  /> \r\n\r\n            <label htmlFor=\"eyesColor\">Kolor oczu</label>\r\n            {selectFieldEyesColor}\r\n\r\n\r\n            <label htmlFor=\"hairColor\">Kolor włosów</label>\r\n            {selectFieldHairColor}\r\n\r\n\r\n            <p>Zainteresowania</p>\r\n            {interestsFields}\r\n            <button type=\"submit\" onClick={onSave} >Zapisz</button>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default UserProfileComponent;","/* eslint-disable eqeqeq */\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { ApiQueryService } from '../services/ApiQueryService';\r\nimport DictionaryItemDto from '../services/dto/DictionaryItemDto';\r\nimport DictionaryService from '../services/DictionaryService';\r\nimport { UserDto, UserFullDto, UserDetailsDto } from '../services/dto/UsersDto';\r\nimport { UsersService } from '../services/UsersService';\r\nimport UserProfileComponent from '../components/UserProfileComponent';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface IProfilePageProps{\r\n loginInfo:any\r\n}\r\n\r\ninterface IProfilePageState{\r\n userFullDto: UserFullDto;\r\n interests : Array<DictionaryItemDto>\r\n eyesColors: Array<DictionaryItemDto>\r\n hairColors: Array<DictionaryItemDto>\r\n}\r\n\r\nclass ProfilePage extends React.Component<IProfilePageProps, IProfilePageState>{\r\n\r\n    usersService = new UsersService();\r\n    dictionaryService = new DictionaryService();\r\n\r\n    _isMounted = false;\r\n    _interestsLoaded =false;\r\n    _eyesColorsLoaded = false;\r\n    _hairColorsLoaded = false;\r\n    _basicLoaded = false;\r\n    _detailsLoaded = false;\r\n\r\n    state={\r\n        interests : new Array<DictionaryItemDto>(),\r\n        eyesColors: new Array<DictionaryItemDto>(),\r\n        hairColors: new Array<DictionaryItemDto>(),\r\n        userFullDto: { basic:{}, details: {}},\r\n        selectedInterests: new Array<number>()\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted=false;\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._isMounted=true;\r\n        if(this.props.loginInfo.loggedIn){\r\n            this.getLoggedUserData();\r\n            this.getDictionariesValues();\r\n        }\r\n        \r\n\r\n    \r\n    }\r\n\r\n    getLoggedUserData = () =>{\r\n        var loggedUserId = +this.usersService.GetIdentity();\r\n        this.usersService.getUserBasic(loggedUserId).then(result=>{\r\n            \r\n            const basicDto = result as UserDto;\r\n            \r\n            const birthDate = new Date(basicDto.birthDate as string)\r\n            this._basicLoaded = true;\r\n            this.setState({\r\n                userFullDto:{\r\n                    ...this.state.userFullDto,\r\n                    basic: basicDto,\r\n                    birthDate\r\n                }\r\n            });\r\n            \r\n        })\r\n\r\n        this.usersService.getUserDetais(loggedUserId).then(result=>{\r\n            const detailsDto = result as UserDetailsDto;\r\n            this._detailsLoaded = true;\r\n            this.setState({\r\n                userFullDto:{\r\n                    ...this.state.userFullDto,\r\n                    details: detailsDto\r\n                }\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    getDictionariesValues = () =>{\r\n        this.dictionaryService.GetAllInterest().then(result=>{\r\n            this._interestsLoaded=true;\r\n            this.setState({\r\n                interests: result\r\n            })\r\n            \r\n        })\r\n        this.dictionaryService.GetAllEyesColors().then(result=>{\r\n            this._eyesColorsLoaded = true;\r\n            this.setState({\r\n                eyesColors: result\r\n            })\r\n            \r\n        })\r\n        this.dictionaryService.GetAllHairColors().then(result=>{\r\n            this._hairColorsLoaded = true;\r\n            this.setState({\r\n                hairColors:result\r\n            })\r\n            \r\n        })\r\n    }\r\n\r\n    \r\n    service = new ApiQueryService();\r\n\r\n    onDateFieldChange = (e) =>{\r\n        if(this._isMounted){\r\n         this.setState({\r\n            userFullDto: {\r\n                ...this.state.userFullDto,\r\n                birthDate: e,\r\n                basic:{\r\n                    ...this.state.userFullDto.basic,\r\n                    birthDate: new Date(e).toJSON()\r\n                }\r\n            }})}\r\n    }\r\n\r\n    onFieldChange = (e) => {\r\n        \r\n        const type=e.target.type;\r\n        let name=e.target.name as string;\r\n\r\n\r\n        if(type === \"checkbox\"){\r\n            const checked = e.target.checked;\r\n            if(this._isMounted)\r\n            this.setState({\r\n                userFullDto: {\r\n                    ...this.state.userFullDto,\r\n\r\n                [name]:checked\r\n            }})\r\n        }\r\n        else {\r\n            if(this._isMounted){\r\n                const value = e.target.value;\r\n                if(name.startsWith('basic_')){\r\n                    name = name.substring(0,'basic_'.length)\r\n                    this.setState({\r\n                        userFullDto: {\r\n                            ...this.state.userFullDto,\r\n                            basic: {\r\n                                ...this.state.userFullDto.basic,\r\n                                [name]: value\r\n                            }\r\n                        }\r\n                    })}\r\n                \r\n                else{\r\n                    this.setState({\r\n                        userFullDto: {\r\n                            ...this.state.userFullDto,\r\n                            details: {\r\n                                ...this.state.userFullDto.details,\r\n                                [name]: value\r\n                            }\r\n                        }\r\n                    })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    onDictionaryFieldChange = (e) =>{\r\n        if(e.target.name === \"eyesColor\"){\r\n            if(this._isMounted)\r\n            this.setState({\r\n                userFullDto: {\r\n                    ...this.state.userFullDto,\r\n                    details:{\r\n                        ...this.state.userFullDto.details,\r\n                        eyesColor: e.target.value\r\n                    }\r\n\r\n                }\r\n            })\r\n        }\r\n        else if(e.target.name === \"hairColor\"){\r\n            if(this._isMounted)\r\n            this.setState({\r\n                userFullDto: {\r\n                    ...this.state.userFullDto,\r\n                    details:{\r\n                        ...this.state.userFullDto.details,\r\n                        hairColor: e.target.value\r\n                    }\r\n\r\n                }\r\n            })\r\n        }\r\n        else if(e.target.name === \"gender\"){\r\n            if(this._isMounted)\r\n            this.setState({\r\n                userFullDto: {\r\n                    ...this.state.userFullDto,\r\n                    basic:{\r\n                        ...this.state.userFullDto.basic,\r\n                        gender: e.target.value\r\n                    }\r\n\r\n                }\r\n            })\r\n        }\r\n    \r\n        else{\r\n            let selectedItems = (this.state.userFullDto.details as UserDetailsDto).interests ?? [];\r\n            \r\n            if(e.target.checked && !selectedItems?.find(x=> x == e.target.name) ){\r\n                selectedItems.push(e.target.name*1);\r\n            }\r\n    \r\n            if(!e.target.checked && selectedItems?.find(x=> x == e.target.name) ){\r\n                selectedItems=selectedItems.filter(x=> x != e.target.name);\r\n                }\r\n\r\n            if(this._isMounted)\r\n            this.setState({\r\n                userFullDto: {\r\n                    ...this.state.userFullDto,\r\n                    details:{\r\n                        ...this.state.userFullDto.details,\r\n                        interests:selectedItems\r\n                    }\r\n                }\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    onSave= () => {\r\n        console.log(this.state);\r\n        this.usersService.patchtUserBasic(this.state.userFullDto.basic);\r\n        this.usersService.patchUserDetails(this.state.userFullDto.details);\r\n    }\r\n\r\n    render(){\r\n        console.log('profile page render loginInfo:', this.props.loginInfo);\r\n    \r\n        if(!this.props.loginInfo.loggedIn){\r\n            return <Redirect to='/login'/>\r\n        }\r\n\r\n        const {eyesColors, hairColors, interests, userFullDto} = this.state;\r\n\r\n        if(this._basicLoaded && this._detailsLoaded && this._hairColorsLoaded && this._interestsLoaded && this._eyesColorsLoaded){\r\n            return(\r\n                \r\n            <div className=\"finder\" >\r\n        \r\n                <UserProfileComponent \r\n                userFullDto = {userFullDto}\r\n                eyesColors={eyesColors}\r\n                hairColors={hairColors}\r\n                interests={interests}\r\n                onFieldChange={this.onFieldChange}\r\n                onDictionaryFieldChange={this.onDictionaryFieldChange}\r\n                onDateFieldChange={this.onDateFieldChange}\r\n                onSave={this.onSave}\r\n                />\r\n            \r\n            </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <p>Loading data</p>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect((state,props)=>{\r\n    return{\r\n        loginInfo:state.loginInfo\r\n    }\r\n})(ProfilePage)","import {ApiQueryService} from \"./ApiQueryService\";\r\nimport { FriendhsipSendRequestDto, UpdateFriendshipStatusDto } from \"./dto/FriendshipRequestDto\";\r\n\r\nexport default class FriendshipService extends ApiQueryService{\r\n\r\n    FriendshipQueryEndpoint =  ApiQueryService.ApiEndpoint + '/api/UserFriendship';\r\n    GetFriendsListEnd = this.FriendshipQueryEndpoint + '/users/{id}/friends';\r\n    GetFriendshipisRequestsEnd = this.FriendshipQueryEndpoint + '/users/{id}/requests';\r\n    GetPossibleActionEnd = this.FriendshipQueryEndpoint + '/PossibleRequestsActions';\r\n    SendInvitationEnd = this.FriendshipQueryEndpoint + '/Invitation';\r\n    SetFriendshipStatusEnd = this.FriendshipQueryEndpoint + '/FriendshipStatusAction';\r\n    GetFriendshipStatusNend = this.FriendshipQueryEndpoint + '/users/{id}/RelationStatus/';\r\n\r\n    GetFriendsList():Promise<Number[]> {\r\n        return this.get<Number[]>(this.BuildAddress(this.GetFriendsListEnd, +this.GetIdentity()));\r\n        }\r\n\r\n        GetFriendshipsRequestsList():Promise<Number[]>{\r\n            return this.get<Number[]>(this.BuildAddress(this.GetFriendshipisRequestsEnd, +this.GetIdentity()));\r\n        }\r\n\r\n        SendInvitation(userId:number){\r\n            const loggedUserId = +this.GetIdentity();\r\n            const endpoint = this.SendInvitationEnd;\r\n            const dto :  FriendhsipSendRequestDto = { fromUserId :loggedUserId,toUserId: userId };\r\n            return this.put(endpoint, dto);\r\n        }\r\n\r\n        GetFriendshipStatus(user1Id: number, user2Id: number) {\r\n            let endpoint = this.BuildAddress(this.GetFriendshipStatusNend, user1Id);\r\n            endpoint += user2Id;\r\n             \r\n\r\n            // return this.get<string>(endpoint);\r\n            let apiKey =  this.GetApiKey();\r\n            if(apiKey === null)\r\n                apiKey ='';\r\n    \r\n            const header = new Headers();\r\n            header.append('Content-Type','application/json');\r\n            header.append('Authorization',apiKey);\r\n            header.append('Accept', 'application/json');\r\n            return fetch(endpoint,{method:'Get',headers: header})\r\n            .then(result=> {\r\n                return result.json().then(res=>{\r\n                    console.log(user1Id);\r\n                    console.log(user2Id);\r\n                    console.log(res);\r\n                    return res as string;\r\n                })\r\n            })\r\n          }\r\n\r\n        AreFriends(user1Id:number, user2Id:number){\r\n            return this.GetFriendshipStatus(user1Id,user2Id).then(result=>{\r\n                return result.toLowerCase() === 'none';\r\n            })\r\n        }\r\n\r\n        AcceptFriendship(userId:number){\r\n            const loggedUserId = +this.GetIdentity();\r\n            let endpoint = this.BuildAddress(this.SetFriendshipStatusEnd, loggedUserId);\r\n           \r\n            const dto : UpdateFriendshipStatusDto = { toUserId:userId, fromUserId : loggedUserId, action: 'Accept' }\r\n            return this.put(endpoint, dto);\r\n        }\r\n\r\n        RemoveFriend(userId:number){\r\n            const loggedUserId = +this.GetIdentity();\r\n            let endpoint = this.BuildAddress(this.SetFriendshipStatusEnd, loggedUserId);\r\n\r\n            const dto : UpdateFriendshipStatusDto = {fromUserId:loggedUserId, toUserId: userId, action: 'Delete'};\r\n            return this.put(endpoint, dto);\r\n        }\r\n      }\r\n    ","import { Component } from \"react\";\r\nimport { UserDto } from \"../services/dto/UsersDto\";\r\nimport * as React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\ninterface IUserCoomponent{\r\n    user:UserDto\r\n}\r\n\r\n\r\n\r\nexport class UserComponent extends Component<IUserCoomponent>{\r\n\r\n    calculateAge = (birthday) => { // birthday is a date\r\n        var ageDifMs = Date.now() - birthday;\r\n        var ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n        return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n      }\r\n\r\n    render(){\r\n     \r\n   \r\n        \r\n\r\n        const user = this.props.user;\r\n        \r\n        let birthDate = '';\r\n        birthDate = user.birthDate?.slice(0,10) ?? '';\r\n        let gender = '';\r\n        switch(user.gender){\r\n            case 'm': gender='male';break;\r\n            case 'f': gender='female';break;\r\n        }\r\n \r\n\r\n        return(\r\n            <>\r\n             <div key={user.id} >\r\n            Użytkownik {user.displayName} <br/>\r\n            Płeć {gender} <br/>\r\n            Wiek {this.calculateAge(Date.parse(birthDate))} <br/>\r\n        </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst UserWithLink = (props) =>{\r\n    const userDetailsLink = `/user/${props.user.id}`;\r\n    return(\r\n        <>\r\n        <UserComponent user={props.user} />\r\n        <Link to={userDetailsLink}>Go</Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserWithLink;\r\n\r\n","import React from \"react\";\r\nimport FriendshipService from \"../services/FriendshipService\";\r\n\r\ninterface IUserFriendshipAction{\r\n    userId:number,\r\n    callBack?\r\n}\r\n\r\nexport class UserFriendshipActionComponent extends React.Component<IUserFriendshipAction>{\r\n    \r\n    _isMounted = false;\r\n    state={\r\n        friendshipStatus:''\r\n    }\r\n\r\n    friendshipService = new FriendshipService();\r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n\r\n        const userId = +this.friendshipService.GetIdentity();\r\n        this.friendshipService.GetFriendshipStatus(userId, this.props.userId).then(result=>{\r\n            \r\n            if(this._isMounted)\r\n            this.setState({\r\n                friendshipStatus:result\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n\r\n    removeFriend = (userId:number) =>{\r\n        this.friendshipService.RemoveFriend(userId);\r\n        this.setState({\r\n            friendshipStatus:'none'\r\n        })\r\n        if(this.props.callBack !== null && this.props.callBack!==undefined)\r\n            this.props.callBack('removeFriend');\r\n    }\r\n\r\n    addToFriends = (userId:number) =>{\r\n        this.friendshipService.SendInvitation(userId);\r\n        this.setState({\r\n            friendshipStatus:'created'\r\n        })\r\n        if(this.props.callBack !== null && this.props.callBack!==undefined)\r\n            this.props.callBack('addFriend');\r\n    }\r\n\r\n    acceptFriendship = (userId:number)=>{\r\n    \r\n        this.friendshipService.AcceptFriendship(userId);\r\n        this.setState({\r\n            friendshipStatus:'friends'\r\n        })\r\n        if(this.props.callBack !== null && this.props.callBack!==undefined)\r\n            this.props.callBack(\"addFriend\");\r\n    }\r\n\r\n    getUserFriendshipsActions = () => {\r\n        const {friendshipStatus}=this.state;    \r\n        const userId = this.props.userId;\r\n        let friendButton;\r\n        switch(friendshipStatus.toLocaleLowerCase())\r\n        {\r\n            case 'friends':\r\n                friendButton = (<button key={userId}  onClick={()=>this.removeFriend(userId)}>Remove from friends</button>);\r\n                break;\r\n            case 'invited':\r\n                friendButton = (<>\r\n                <button  key={userId+'accept'} onClick={()=>this.acceptFriendship(userId)}>Accept</button>\r\n                <button key={userId+'remove'}  onClick={()=>this.removeFriend(userId)}>Remove from friends</button>\r\n                </>);\r\n                break;\r\n            case 'created':\r\n                friendButton=(<>\r\n                 <p>Invitation to friends has been sent</p>\r\n                 <button key={userId}  onClick={()=>this.removeFriend(userId)}>Remove from friends</button>\r\n                 </>\r\n\r\n                )\r\n                break;\r\n            case 'none':\r\n            friendButton = <button  key={userId} onClick={()=>this.addToFriends(userId)}>Add to friends</button>;\r\n            break;\r\n        }\r\n\r\n        return friendButton;\r\n    }\r\n    \r\n    render(){\r\n\r\n        if(this.props.userId === 0)\r\n        return (<></>)\r\n\r\n        const actionBtn = this.getUserFriendshipsActions();\r\n        \r\n\r\n        return (\r\n            <>\r\n            {actionBtn}\r\n            </>\r\n        )\r\n    }\r\n\r\n}","import { Component } from \"react\";\r\nimport { UserDto } from \"../services/dto/UsersDto\";\r\nimport { UserComponent } from \"./UserComponent\";\r\nimport * as React from 'react';\r\nimport { UserFriendshipActionComponent } from \"./UserFriendshipActionComponent\";\r\ninterface IFriendComponent{\r\n    user: UserDto\r\n    callBack?\r\n}\r\nexport class FriendComponent extends Component<IFriendComponent>{\r\n    state = {\r\n        friendshipStatus: 'friends'\r\n    }\r\n    \r\n    callBack = (action) =>{\r\n        console.log(\"friendComponent callBack\");\r\n        if(this.props.callBack!==null && this.props.callBack!==undefined)\r\n        {\r\n            if(action === 'removeFriend'){\r\n                this.props.callBack('friends');\r\n            }\r\n            else{\r\n                this.props.callBack();\r\n            } \r\n        }\r\n    }\r\n            \r\n    \r\n    render(){\r\n\r\n        return (\r\n            <>\r\n            \r\n        <UserComponent user={this.props.user} />\r\n        <UserFriendshipActionComponent userId={this.props.user.id ?? 0} callBack={this.callBack} />\r\n        </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport FriendshipService from '../services/FriendshipService';\r\nimport { UsersService } from '../services/UsersService';\r\nimport { FriendComponent } from '../components/FriendComponent';\r\nimport { UserDto } from '../services/dto/UsersDto';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface IFriendsPageProps{\r\n    loginInfo:any\r\n   }\r\n\r\nclass FriendsPage extends React.Component<IFriendsPageProps>{\r\n    _isMsounted:boolean = false;\r\nstate={\r\n    friends: new Array<UserDto>(),\r\n    invitations:new Array<UserDto>(),\r\n}\r\n\r\nfriendsService = new FriendshipService();\r\nusersService = new UsersService();\r\n\r\ncomponentDidMount(){\r\n    this._isMsounted = true;\r\n    if(this.props.loginInfo.loggedIn){\r\n        this.getFriends();\r\n        this.getInvitations();\r\n    }\r\n}\r\n\r\ngetFriends = () => {\r\n    this.friendsService.GetFriendsList().then(result=>{\r\n        this.usersService.getManyUsers(result).then(result=>{\r\n            if(this._isMsounted)\r\n            this.setState({\r\n                friends:result\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\ngetInvitations = () =>{\r\n    this.friendsService.GetFriendshipsRequestsList().then(result=>{\r\n        this.usersService.getManyUsers(result).then(result=>{\r\n            if(this._isMsounted)\r\n            this.setState({\r\n                invitations:result\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\ncomponentWillUnmount(){\r\n    this._isMsounted = false;\r\n}\r\n\r\ncallBack(action:string){\r\n    debugger;\r\n    if(action === 'invitations'){\r\n        this.getInvitations();\r\n    }\r\n    else if(action === 'friends'){\r\n        this.getFriends();\r\n    }\r\n    else{\r\n        this.getInvitations();\r\n        this.getFriends();\r\n    }\r\n}\r\n\r\nrender(){\r\n    if(!this.props.loginInfo.loggedIn){\r\n        return <Redirect to='/login'/>\r\n    }\r\n    \r\n    const userStyle={\r\n        border: '1px solid gray',\r\n        margin:'10px'\r\n    }\r\n\r\n    const friendsList = this.state.friends.map(x=>{\r\n        return (\r\n        <div key={x.id} style={userStyle}>\r\n        <FriendComponent user={x} callBack={this.callBack.bind(this)}></FriendComponent>\r\n        </div>)\r\n    })\r\n\r\n    const invitationsList = this.state.invitations.map(x=>{\r\n        return (\r\n            <div key={x.id} style={userStyle}>\r\n            <FriendComponent user={x} callBack={this.callBack.bind(this)} />\r\n            </div>)\r\n    })\r\n\r\n  \r\n\r\n    return(\r\n    <div className=\"Friends\">\r\n        <h3>Friends</h3>\r\n        {friendsList}\r\n        <h3>Invitations to friends</h3>\r\n        {invitationsList}\r\n    </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default connect((state,props)=>{\r\n    return{\r\n        loginInfo:state.loginInfo\r\n    }\r\n})(FriendsPage)","import { ApiQueryService } from \"./ApiQueryService\";\r\nimport { LastMessageDto, MessageDto, MessageBasicDto, RequestMessagesDto } from \"./dto/MessagesDto\";\r\n\r\nexport class MessagesService extends ApiQueryService{\r\n    MessagesEndp = ApiQueryService.ApiEndpoint + '/api/Messages';\r\n    ConversationsEndp = this.MessagesEndp + '/Conversation/{id}';\r\n    SpeakersEndp = this.MessagesEndp + '/{id}/Speakers';\r\n    WholeConversationEndp = this.MessagesEndp + '/Conversation';\r\n    MessageMarkReadEndp = this.MessagesEndp + '/MarkRead';\r\n    MessageMarkUnreadEndp = this.MessagesEndp + '/MarkUnread';\r\n\r\n    \r\n  GetLastMessages(): Promise<Array<LastMessageDto>> {\r\n     const userId = +this.GetIdentity();\r\n    const endpoint = this.BuildAddress(this.ConversationsEndp, userId);\r\n    return this.get<Array<LastMessageDto>>(endpoint);\r\n  }\r\n\r\n  GetConversation(speakerId: number): Promise<Array<MessageDto>> {\r\n      \r\n    const dto :  RequestMessagesDto = {firstUserId: +this.GetIdentity(), secondUserId: +speakerId};\r\n    const endpoint = this.BuildAddress(this.WholeConversationEndp, dto.firstUserId);\r\n    return this.postSpecific<Array<MessageDto>>(endpoint, dto);\r\n  }\r\n\r\n  SendMessage(receiverId:number, content:string) {\r\n    const dto :  MessageBasicDto = {receiverId: receiverId, content: content, senderId: +this.GetIdentity()};\r\n    console.log(dto);\r\n    const endpoint = this.BuildAddress(this.MessagesEndp);\r\n    return this.post(endpoint, dto);\r\n  }\r\n}","import * as React from 'react';\r\nimport { LastMessageDto } from '../services/dto/MessagesDto';\r\nimport {Link} from 'react-router-dom';\r\ninterface IConversationsComponent{\r\n    conversations: LastMessageDto[]\r\n}\r\nexport class ConversationsComponent extends React.Component<IConversationsComponent>{\r\n\r\n\r\n    render(){\r\n        const messageStyle={\r\n            color:\"white\",\r\n            backgroundColor: \"violet\",\r\n            padding: \"10px\",\r\n            fontFamily: \"Arial\",\r\n            margin:\"10px\",\r\n\r\n            a:{\r\n                color:\"red\",\r\n            }\r\n            \r\n        };\r\n\r\n        let convs = this.props.conversations.map(x=>{\r\n            const linkToConversation = `/messages/conversation/${x.speakerId}`;\r\n            return (\r\n                <div key={x.speakerId} style={messageStyle}>\r\n                {x.messageDate} | <strong> {x.speakerName}</strong> <br/>\r\n                {x.messageShortContent} \r\n                <hr/>\r\n                <Link to={linkToConversation}>Przejdź</Link>\r\n                </div>\r\n            )\r\n        })\r\n\r\n\r\n        return (\r\n        <div>\r\n            {convs}\r\n        </div>\r\n    )\r\n    }\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { MessagesService } from '../services/MessagesService';\r\nimport { LastMessageDto } from '../services/dto/MessagesDto';\r\nimport { ConversationsComponent } from '../components/ConversationsComponent';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface IMessagesPageProps{\r\n    loginInfo:any\r\n   }\r\n\r\n   \r\nclass MessagesPage extends React.Component<IMessagesPageProps>{\r\n\r\nstate={\r\n    conversations: new Array<LastMessageDto>(),\r\n}\r\n\r\nlastMessagesIntervalId;\r\nservice = new MessagesService();\r\n\r\ngetLastMessage = () =>{\r\n    this.service.GetLastMessages().then(result=>{\r\n        this.setState({\r\n            conversations: result\r\n        })\r\n    })\r\n}\r\ncomponentDidMount(){\r\n    if(this.props.loginInfo.loggedIn){\r\n        this.getLastMessage();\r\n        this.lastMessagesIntervalId = setInterval(this.getLastMessage, 3000);\r\n    }\r\n    \r\n}\r\n\r\ncomponentWillUnmount= () => {\r\n    clearInterval(this.lastMessagesIntervalId);\r\n}\r\n\r\nrender(){\r\n    \r\n  \r\n    if(!this.props.loginInfo.loggedIn){\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    return(\r\n    <div className=\"Messages\">\r\n        <ConversationsComponent conversations={this.state.conversations} />\r\n    </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default connect((state,props)=>{\r\n    return{\r\n        loginInfo:state.loginInfo\r\n    }\r\n})(MessagesPage)","export default class SearchQueryDto {\r\n    name?: string;\r\n    region?: string;\r\n    city?: string;\r\n    agefrom?: number;\r\n    ageto?: number;\r\n    heightfrom?: number;\r\n    heightto?: number;\r\n    widthfrom?: number;\r\n    widthto?: number;\r\n    gender?: string;\r\n    tatoos?: boolean;\r\n    interestids?: number[];\r\n    haircolor?: number;\r\n    eyescolor?: number;\r\n    isonline?: boolean;\r\n    }","import React from 'react';\r\nconst FinderBasicFieldsComponent = (props) => {\r\n    const {query, onFieldChange}=props;\r\n    return ( \r\n        <>\r\n           <label htmlFor=\"userName\">Nazwa użytkownika</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" value={query.name || \"\"} onChange={onFieldChange} />\r\n\r\n            <label htmlFor=\"region\">Województwo</label>\r\n            <input type=\"text\" id=\"region\" name=\"region\" value={query.region || \"\"} onChange={onFieldChange} />\r\n\r\n            <label htmlFor=\"city\">Miasto</label>\r\n            <input type=\"text\" id=\"city\" name=\"city\" value={query.city || \"\"} onChange={onFieldChange}  />\r\n\r\n            <label htmlFor=\"ageFrom\">Wiek od</label>\r\n            <input type=\"text\" id=\"agefrom\" name=\"agefrom\" value={query.agefrom || \"\"} onChange={onFieldChange}  />\r\n\r\n            <label htmlFor=\"ageTo\">Wiek do</label>\r\n            <input type=\"text\" id=\"ageto\" name=\"ageto\" value={query.ageto || \"\"} onChange={onFieldChange}  />\r\n\r\n            <label htmlFor=\"widthFrom\">Wzrost od</label>\r\n            <input type=\"text\" id=\"widthfrom\" name=\"widthfrom\" value={query.widthfrom || \"\"} onChange={onFieldChange}  />\r\n\r\n            <label htmlFor=\"widthTo\">Wzrost do</label>\r\n            <input type=\"text\" id=\"widthto\" name=\"widthto\"value={query.widthto || \"\"} onChange={onFieldChange}  />\r\n\r\n\r\n            <label htmlFor=\"heigthFrom\">Waga od</label>\r\n            <input type=\"text\" id=\"heigthFrom\" name=\"heigthFrom\" value={query.heightfrom || \"\"} onChange={onFieldChange}  />\r\n\r\n            <label htmlFor=\"heigthTo\">Waga do</label>\r\n            <input type=\"text\" id=\"heigthTo\" name=\"heigthTo\" value={query.heightto || \"\"} onChange={onFieldChange}  />\r\n\r\n            <label htmlFor=\"gender\">Płeć</label>\r\n            <select id=\"gender\" name=\"gender\" onChange={onFieldChange}>\r\n            <option value=\"m\">Mężczyzna</option>\r\n            <option value=\"f\">Kobieta</option>\r\n            </select>\r\n\r\n            <label htmlFor=\"tattos\">Tatuaże</label>\r\n            <input type=\"checkbox\" id=\"tatoos\" name=\"tatoos\" checked={query.tatoos || false} onChange={onFieldChange}  />\r\n        </>\r\n     );\r\n}\r\n \r\nexport default FinderBasicFieldsComponent;","import { ApiQueryService } from './ApiQueryService';\r\nimport SearchQueryDto from './dto/SearchQueryDto';\r\nimport { UsersService } from './UsersService';\r\nimport { UserDto } from './dto/UsersDto';\r\n\r\nexport class SearchUsersService extends ApiQueryService{\r\n    postUserFindEnd  =  ApiQueryService.ApiEndpoint + '/api/UserFinder';\r\n\r\n    searchUsers(dto: SearchQueryDto):Promise<UserDto[]>{\r\n        return this.postSpecific<Array<Number>>(this.postUserFindEnd, dto)\r\n        .then(result=>{\r\n            return new UsersService().getManyUsers(result);\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { UserDto } from '../services/dto/UsersDto';\r\nimport {Link} from 'react-router-dom';\r\nimport UserWithLink ,{UserComponent, } from '../components/UserComponent';\r\ninterface ISearchComponentProps{\r\n    users : UserDto[]\r\n}\r\n\r\n\r\nexport class SearchResultComponent extends Component<ISearchComponentProps>  {\r\n  \r\n    render(){\r\n\r\n        const users = this.props.users as UserDto[];\r\n        const usersList = users.map(user=>{\r\n            const userStyle={\r\n                border: '1px solid gray',\r\n            }\r\n       \r\n        return (\r\n            <div style={userStyle} key={user.id}>\r\n            <UserWithLink user={user}></UserWithLink>\r\n            </div>\r\n        );\r\n    })\r\n    return ( \r\n    <>\r\n    {usersList}\r\n    </> );\r\n    }\r\n}\r\n \r\nexport default SearchResultComponent;","/* eslint-disable eqeqeq */\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport DictionaryService from '../services/DictionaryService';\r\nimport SearchQueryDto from '../services/dto/SearchQueryDto';\r\nimport DictionaryItemDto from '../services/dto/DictionaryItemDto';\r\nimport FieldBasicFieldsComponent from '../components/FinderBasicFieldsComponent';\r\nimport { SearchUsersService } from '../services/SearchUsersService';\r\nimport { UserDto } from '../services/dto/UsersDto';\r\nimport SearchResultComponent from '../components/SearchResultComponent';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface ISearchPageProps{\r\n    loginInfo:any\r\n   }\r\n\r\nclass SearchPage extends React.Component<ISearchPageProps>{\r\n _isMounted = false;\r\nstate={\r\n    queryDto: new SearchQueryDto(),\r\n    interests : new Array<DictionaryItemDto>(),\r\n    eyesColors: new Array<DictionaryItemDto>(),\r\n    hairColors: new Array<DictionaryItemDto>(),\r\n    searchResult: new Array<UserDto>(),\r\n}\r\n\r\ndictionaryService = new DictionaryService();\r\nsearchService = new SearchUsersService();\r\n\r\nonFieldChange = (e) => {\r\n    const value = e.target.value;\r\n    const checked = e.target.checked;\r\n    const name=e.target.name;\r\n    const type=e.target.type;\r\n    if(type === \"checkbox\"){\r\n        if(this._isMounted)\r\n        this.setState({\r\n            queryDto: {\r\n                ...this.state.queryDto,\r\n            [name]:checked\r\n        }})\r\n    }\r\n    else {\r\n        if(this._isMounted)\r\n        this.setState({\r\n            \r\n            queryDto: {\r\n                ...this.state.queryDto,\r\n                [name]:value\r\n            }\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nonDictionaryFieldChange = (e) =>{\r\n    if(e.target.name === \"eyesColor\"){\r\n        if(this._isMounted)\r\n        this.setState({\r\n            queryDto: {\r\n                ...this.state.queryDto,\r\n                eyescolor: e.target.value,\r\n        }})\r\n    }\r\n    else if(e.target.name === \"hairColor\"){\r\n        if(this._isMounted)\r\n        this.setState({\r\n            queryDto: {\r\n                ...this.state.queryDto,\r\n                haircolor: e.target.value,\r\n        }})\r\n    }\r\n\r\n    else{\r\n        let selectedItems = this.state.queryDto.interestids ?? [];\r\n        \r\n        if(e.target.checked && !selectedItems?.find(x=> x == e.target.name) ){\r\n            selectedItems.push(e.target.name*1);\r\n\r\n        }\r\n\r\n        if(!e.target.checked && selectedItems?.find(x=> x == e.target.name) ){\r\n            selectedItems=selectedItems.filter(x=> x != e.target.name);\r\n            }\r\n        if(this._isMounted)\r\n        this.setState({\r\n            queryDto:{\r\n            ...this.state.queryDto,\r\n            interestids: selectedItems,\r\n        }})\r\n    }\r\n   \r\n}\r\n\r\nsearchUsers = () =>{\r\n     this.searchService.searchUsers(this.state.queryDto).then(res=>{\r\n         if(res !== undefined){\r\n             if(this._isMounted)\r\n             this.setState({\r\n                searchResult: res\r\n             });\r\n         }\r\n     })\r\n}\r\n\r\n\r\ncomponentWillUnmount(){\r\n    this._isMounted = false;\r\n}\r\ncomponentDidMount(){\r\n    \r\n    this._isMounted = true;\r\n    if(this.props.loginInfo.loggedIn){\r\n     this.dictionaryService.GetAllInterest().then(result=>{\r\n        if(this._isMounted)\r\n        this.setState({\r\n            interests:result,\r\n        });\r\n  \r\n    });\r\n    \r\n    this.dictionaryService.GetAllEyesColors().then(result=>{\r\n        if(this._isMounted)\r\n        this.setState({\r\n            eyesColors:result\r\n        })\r\n    });\r\n    \r\n    this.dictionaryService.GetAllHairColors().then(result=>{\r\n        if(this._isMounted)\r\n        this.setState({\r\n            hairColors:result\r\n        })\r\n    })}\r\n}\r\nrender(){\r\n         \r\n    const finderStyle={\r\n        display: 'inline-grid',\r\n        width:'35%',\r\n        margin:'10px',\r\n \r\n    }\r\n\r\n    if(!this.props.loginInfo.loggedIn){\r\n        return <Redirect to='/login'/>\r\n    }\r\n \r\n\r\n    const apiKey = this.searchService.GetApiKey();\r\n  \r\n    if(apiKey === undefined || apiKey === null || apiKey===''){\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    const query = this.state.queryDto;\r\n    \r\n    let eyesColorsFields ;\r\n    if(this.state.eyesColors.length >0){\r\n        eyesColorsFields = this.state.eyesColors.map(item=>\r\n            (\r\n                <option key={item.id} value={item.id}> {item.displayName} </option>\r\n            )  \r\n        );\r\n    }\r\n\r\n    let hairColorsFields ;\r\n    if(this.state.eyesColors.length >0){\r\n        hairColorsFields = this.state.hairColors.map(item=>\r\n            (\r\n                <option key={item.id} value={item.id}> {item.displayName} </option>\r\n            )  \r\n        );\r\n    }\r\n\r\n    let interestsIds;\r\n    if(this.state.interests.length >0){\r\n        interestsIds = this.state.interests.map(item=>\r\n            (\r\n                <label key={item.name}>\r\n                    <input type=\"checkbox\" key={item.name} name={item.id+''} onChange={this.onDictionaryFieldChange}  /> \r\n                    {item.displayName}\r\n                </label>\r\n            )\r\n        )\r\n    }\r\n\r\n    const searchResponse = this.state.searchResult.length > 0 ? this.state.searchResult : null;\r\n\r\n    \r\n\r\n\r\n    return(\r\n        \r\n    <div className=\"finder\" >\r\n         <div style={finderStyle}>\r\n\r\n          <FieldBasicFieldsComponent query={query} onFieldChange={this.onFieldChange} />\r\n\r\n             <label htmlFor=\"eyesColor\">Kolor oczu</label>\r\n            <select id=\"eyesColor\" name=\"eyesColor\"  onChange={this.onDictionaryFieldChange}>\r\n            {eyesColorsFields}\r\n            </select>\r\n\r\n\r\n            <label htmlFor=\"hairColor\">Kolor włosów</label>\r\n            <select  id=\"hairHolor\" name=\"hairColor\" onChange={this.onDictionaryFieldChange}>\r\n            {hairColorsFields}\r\n            </select>\r\n\r\n\r\n            <p>Zainteresowania</p>\r\n            {interestsIds}\r\n            <button type=\"submit\" onClick={this.searchUsers}>Wyszukaj</button>\r\n        </div>\r\n        <div>\r\n        {searchResponse != null && <SearchResultComponent users={searchResponse}></SearchResultComponent>}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default connect((state,props)=>{\r\n    return {loginInfo:state.loginInfo}\r\n})(SearchPage);","import {RegisterDto, ApiAuthDto} from './dto/ApiAuthDto';\r\nimport {ApiQueryService} from './ApiQueryService';\r\n\r\nexport default class AuthenticationService{\r\n    \r\n  loginEndpotint = '/api/Login/Login';\r\n  registerEndpoint = '/api/login/Register';\r\n  identityEndpoint = '/api/login/Identity';\r\n\r\n\r\n\r\nRegisterUser(dto: RegisterDto){\r\n  const endpoint = ApiQueryService.ApiEndpoint + this.registerEndpoint;\r\n}\r\n\r\nLoginUser(dto: ApiAuthDto){\r\n  const endpoint = ApiQueryService.ApiEndpoint + this.loginEndpotint;\r\n  const response = fetch(endpoint, {\r\n    method: 'POST',\r\n    headers: {'Content-Type':'application/json','Accept': 'application/json'},\r\n    body: JSON.stringify(dto)\r\n  }).then(response=>{\r\n    if(response.status !== 200){\r\n      console.log(\"not logged\");\r\n      throw Error;\r\n    }\r\n    return response.json().then(resp=>{\r\n      const key = resp;\r\n      return key;\r\n    })})\r\n  .catch(err=>{\r\n    console.log(\"error:\"+err);\r\n  })\r\n  return response;\r\n}\r\n\r\nGetIdentity(apiKey: string){\r\n  const endpoint = ApiQueryService.ApiEndpoint + this.identityEndpoint;\r\n  return fetch(endpoint, {\r\n    method: 'GET',\r\n    headers: {'Content-Type':'application/json','Accept': 'application/json', 'Authorization':apiKey},\r\n  }).then(result=>{\r\n    return result.json().then(res=>{\r\n      return res as Number;\r\n    })\r\n  })\r\n\r\n}\r\n\r\n}","import React from 'react';\r\nimport {ApiAuthDto} from '../services/dto/ApiAuthDto'\r\nimport AuthenticationService from '../services/AuthenticationService';\r\nimport { ApiQueryService } from '../services/ApiQueryService';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface ILoginProps{\r\n    dispatch:any,\r\n    loginProps:any\r\n}\r\nclass LoginPage extends React.Component<ILoginProps>{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const {dispatch} = this.props;\r\n    }\r\n\r\n    apiQueryService = new ApiQueryService();\r\n    state = {\r\n        login: \"\",\r\n        password:\"\",\r\n        authFailed:false,\r\n    }\r\n    \r\n    handleLogin =() =>{\r\n        const dto: ApiAuthDto = {Password: this.state.password, UserName:this.state.login};\r\n        const authService = new AuthenticationService();\r\n        authService.LoginUser(dto)\r\n        .then(response=>{\r\n            if(response === \"\" || response === undefined){\r\n                this.setState({\r\n                    authFailed:true\r\n                })\r\n            }\r\n            else{ //logged in\r\n\r\n            authService.GetIdentity(response).then(result=>{\r\n                this.props.dispatch({type:'LOGIN_SUCCESSFUL',\r\n            data:{\r\n                loggedIn : true,\r\n                identity: result.toString(),\r\n                apiKey: response,\r\n            }})\r\n            })\r\n        }\r\n        });\r\n        \r\n    }\r\n\r\n    handleLogout = () =>{\r\n        this.props.dispatch({type:'LOGOUT'});\r\n    }\r\n\r\n    handleFieldChanged = (e : any) =>{\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        const apiKey = this.apiQueryService.GetApiKey();\r\n        const loggedFailedInfo = this.state.authFailed && <p>Nie udało się zalogować</p>;\r\n\r\n        console.log(this.props);\r\n        if(this.props.loginProps.loggedIn){\r\n            return(\r\n                <>\r\n                <button onClick={this.handleLogout}>Log out</button>\r\n                </>\r\n            )\r\n        }\r\n        \r\n        return (\r\n            <>\r\n            {loggedFailedInfo}\r\n            Login: <input type=\"text\" id=\"login\" name=\"login\" value={this.state.login} onChange={this.handleFieldChanged}></input>\r\n            <br/>\r\n            Password: <input type=\"password\" id=\"password\" name=\"password\" value={this.state.password} onChange={this.handleFieldChanged}></input>\r\n            <br/>\r\n            <button onClick={this.handleLogin}>Log in</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state,props)=>{\r\n    return{\r\n        loginProps: state.loginInfo\r\n    }\r\n})(LoginPage) ;","import { Component } from \"react\";\r\nimport DictionaryService from '../services/DictionaryService';\r\nimport DictionaryItemDto from \"../services/dto/DictionaryItemDto\";\r\nimport * as React from 'react';\r\n\r\ninterface IInterestsDisplay{\r\n    ids:Array<Number>   \r\n}\r\n\r\nexport default class InterestDisplayComponent extends Component<IInterestsDisplay>{\r\n\r\n    state={\r\n        userInterests: new Array<DictionaryItemDto>(),\r\n        dataFilled: false,\r\n        ids: new Array<Number>(),\r\n    }\r\n\r\ncomponentDidMount(){\r\n    let ids = this.props.ids;\r\n    this.setState({\r\n        ids\r\n    })\r\n    this.getInterstsData();\r\n}\r\n\r\n\r\n\r\n\r\n    getInterstsData = () => {\r\n \r\n        const userInterstsIds = this.state.ids;\r\n        if(this.state.ids.length < 1){\r\n            return;\r\n        }\r\n        const dictionaryService = new DictionaryService();\r\n        dictionaryService.GetAllInterest().then(result=>{\r\n         \r\n         const userInterests = result.filter(x=> userInterstsIds.indexOf(x.id ?? 0) > -1 );\r\n         this.setState({\r\n             userInterests,\r\n             dataFilled : true,\r\n         })\r\n         if(userInterests.length < 1){\r\n             this.setState({\r\n                userInterests: null\r\n             })\r\n         }\r\n         \r\n        })\r\n    }\r\n    render(){\r\n        \r\n    \r\n    if(this.state.dataFilled && this.state.userInterests !==null){\r\n        const dictionaryItem = this.state.userInterests.map(x=>{\r\n            return <li key={x.id}>{x.displayName}</li>\r\n        })\r\n     \r\n    return ( \r\n        <ul>\r\n            {dictionaryItem}\r\n        </ul>\r\n     );\r\n    }\r\n    else{\r\n        this.getInterstsData();\r\n        return (<></>)\r\n    }\r\n}\r\n}\r\n\r\n \r\n","import * as React from 'react'; \r\nimport DictionaryService from '../services/DictionaryService';\r\nimport DictionaryItemDto from '../services/dto/DictionaryItemDto';\r\n\r\ninterface IDictionaryFieldReadComponent{\r\n    itemName,\r\n    itemId,\r\n}\r\n\r\n\r\n\r\nexport class DictionaryFieldReadComponent extends React.Component<IDictionaryFieldReadComponent>{\r\n\r\n    state = {\r\n        dictionaryItems : new Array<DictionaryItemDto>()\r\n    }\r\n\r\n    dictionaryService = new DictionaryService();\r\n    componentDidMount(){\r\n        \r\n        this.dictionaryService.GetAllHairColors().then(result=>{\r\n            this.setState({\r\n                dictionaryItems : this.state.dictionaryItems.concat(result)\r\n            })\r\n        })\r\n\r\n        this.dictionaryService.GetAllEyesColors().then(result=>{\r\n            this.setState({\r\n                dictionaryItems : this.state.dictionaryItems.concat(result)\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const item = this.state.dictionaryItems.find(x=> x.id === this.props.itemId);\r\n        let displayResult=''\r\n        if(item!==undefined){\r\n            displayResult= `${this.props.itemName}: ${item.displayName}`;\r\n        }\r\n        return (\r\n                <>\r\n                    {displayResult}\r\n                </>\r\n            )\r\n        \r\n    }\r\n}","import * as React from 'react';\r\nimport { Component } from \"react\";\r\nimport { UserFullDto } from '../services/dto/UsersDto';\r\nimport InterestDisplayComponent from '../components/InterestsDisplayComponent';\r\nimport { UserComponent } from './UserComponent';\r\nimport { UserFriendshipActionComponent } from './UserFriendshipActionComponent';\r\nimport {DictionaryFieldReadComponent} from './DictionaryFieldReadComponent'\r\ninterface IUserDetailsComponent{\r\n    user: UserFullDto\r\n}\r\nexport class UserDetailsComponent extends Component<IUserDetailsComponent>{\r\n    render(){\r\n        const userDto = this.props.user;\r\n        const userInterest = userDto.details?.interests as Number[];\r\n        console.log(\"render\");\r\n        console.log(userDto.basic.id);\r\n    return(\r\n        \r\n        <>\r\n        <UserComponent user={userDto.basic} />\r\n        <table >\r\n            <tbody>\r\n                <tr>\r\n                    <th>Miasto</th>\r\n                    <td>{userDto.details?.city}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Województwo</th>\r\n                    <td>{userDto.details?.region}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Wzrost</th>\r\n                    <td>{userDto.details?.width}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Waga</th>\r\n                    <td>{userDto.details?.heigth}</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>\r\n                    <DictionaryFieldReadComponent itemName=\"kolor oczu\" itemId={userDto.details?.eyesColor ?? 0} />\r\n                    </td>\r\n                </tr>\r\n\r\n                \r\n                <tr>\r\n                    <td>\r\n                    <DictionaryFieldReadComponent itemName=\"kolor włosów\" itemId={userDto.details?.hairColor ?? 0} />\r\n                    </td>\r\n                </tr>\r\n\r\n  <tr>\r\n    <th>Zainteresowania</th>\r\n    <td>\r\n            {userInterest?.length >0 ? \r\n            <InterestDisplayComponent ids={userInterest} /> : <></>}\r\n    </td>\r\n  </tr> \r\n            </tbody>\r\n        </table>\r\n        {userDto.basic.id !== undefined ? <UserFriendshipActionComponent userId={userDto.basic.id ?? 0} /> : undefined}\r\n\r\n        </>\r\n        )\r\n    }\r\n}","import React, { Props } from 'react';\r\nimport { UsersService } from '../services/UsersService';\r\nimport {UserDetailsDto, UserDto, UserFullDto} from '../services/dto/UsersDto';\r\nimport {UserDetailsComponent} from '../components/UserDetailsComponent';\r\nimport { Redirect } from 'react-router';\r\nexport default class  UserDetailsPage extends React.Component{\r\n    \r\n    usersService = new UsersService();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            userId: props.match.params.id,\r\n            userDto: {},\r\n            userDetailsDto: {}\r\n        }\r\n    }\r\n\r\n    state={\r\n        userId: 0,\r\n        userDto:{},\r\n        userDetailsDto: {}\r\n    }\r\n\r\n    componentDidMount(){\r\n        const userId = this.state.userId;\r\n  \r\n    this.usersService.getUserDetais(userId).then(result=>{\r\n        this.setState({\r\n            userDetailsDto: result\r\n        })\r\n    });\r\n\r\n    this.usersService.getUserBasic(userId).then(result=>{\r\n        this.setState({\r\n            userDto: result\r\n        })        \r\n    })\r\n    }\r\n    \r\n\r\n    render(){\r\n        const apiKey = this.usersService.GetApiKey();\r\n  \r\n        if(apiKey === undefined || apiKey === null || apiKey===''){\r\n            return <Redirect to='/login'/>\r\n        }\r\n    \r\n    \r\n    const {userDto, userDetailsDto} = this.state\r\n    if(userDto !== undefined && userDetailsDto !==undefined){\r\n\r\n        const detailsDto = userDetailsDto as UserDetailsDto;\r\n        const userBasicDto = userDto as UserDto;\r\n        const userFullDto : UserFullDto ={ basic: userBasicDto, details: detailsDto };\r\n\r\n        return(\r\n            <UserDetailsComponent user={userFullDto} /> // get full user details DTO\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n    \r\n        </>\r\n    )}\r\n}","import * as React from 'react';\r\nimport { MessagesService } from '../services/MessagesService';\r\n\r\ninterface ISendMessageComponent{\r\n    userId: number\r\n}\r\nexport class SendMessageComponent extends React.Component<ISendMessageComponent>{\r\n\r\n        state={\r\n            message:''\r\n        }\r\n\r\n        service = new MessagesService();\r\n\r\n        sendMessage = () =>{\r\n            this.service.SendMessage(this.props.userId, this.state.message);\r\n            this.setState({\r\n                message:'',\r\n            })\r\n        }\r\n\r\n        contentChanged= (e) =>{\r\n            this.setState({\r\n                message:e.target.value\r\n            })\r\n        }\r\n\r\n        render(){\r\n            const textareaStyle= {\r\n                width: \"400px\",\r\n                height: \"50px\",\r\n            }\r\n            return(\r\n                <div>\r\n                    <textarea style={textareaStyle}  onChange={this.contentChanged} value={this.state.message} />\r\n                    <br/>\r\n                    <button onClick={this.sendMessage}>Wyślij</button>\r\n                </div>\r\n            )\r\n        }\r\n}","import * as React from 'react';\r\nimport { MessagesService } from '../services/MessagesService';\r\nimport { MessageDto } from '../services/dto/MessagesDto';\r\nimport { UsersService } from '../services/UsersService';\r\nimport {UserDto} from '../services/dto/UsersDto';\r\nimport {Link} from 'react-router-dom';\r\nimport {SendMessageComponent} from '../components/SendMessageComponent';\r\nexport class ConversationPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            userId: props.match.params.id,\r\n            conversation: new Array<MessageDto>(),\r\n            speaker: {}\r\n        }\r\n    }\r\n\r\n    conversationIntervalId;\r\n\r\n    state={\r\n        userId:0,\r\n        conversation: new Array<MessageDto>(),\r\n        speaker: {}\r\n    }\r\n\r\n    getGonversation = () =>{\r\n        this.service.GetConversation(this.state.userId).then(result=>{\r\n            this.setState({\r\n                conversation:result\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getGonversation();\r\n        this.conversationIntervalId = setInterval(this.getGonversation, 1000);\r\n\r\n        this.userService.getUserBasic(this.state.userId).then(result=>{\r\n            this.setState({\r\n                speaker: result\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.conversationIntervalId);\r\n    }\r\n\r\n    service = new MessagesService();\r\n    userService = new UsersService();\r\n    render(){\r\n        \r\n        const messageStyle={\r\n            color:\"white\",\r\n            backgroundColor: \"DodgerBlue\",\r\n            padding: \"10px\",\r\n            fontFamily: \"Arial\",\r\n            margin:\"10px\",\r\n        };\r\n\r\n        let speaker = this.state.speaker as UserDto;\r\n        let linkToUser = `/user/${speaker.id}`;\r\n        let messages = this.state.conversation.map(message=>{\r\n            return(\r\n                <div style={messageStyle} key={message.sendDate?.toString() ?? ''}>\r\n                    <strong> {message.senderName}</strong> | {message.sendDate}  <br/>\r\n                    {message.content}\r\n                </div>\r\n            )\r\n        });\r\n\r\n        return(\r\n            <div>\r\n                <h3>\r\n                conversation with <Link to={linkToUser}> {speaker.displayName}</Link>\r\n                </h3>\r\n\r\n                <SendMessageComponent userId={speaker.id ?? 0} />\r\n\r\n                {messages}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ConversationPage","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport ProfilePage from '../pages/ProfilePage';\r\nimport FriendsPage from '../pages/FriendsPage';\r\nimport MessagesPage from '../pages/MessagesPage';\r\nimport SearchPage from '../pages/SearchPage';\r\nimport LoginPage from '../pages/LoginPage'\r\nimport UserDetailsPage from '../pages/UserDetailsPage';\r\nimport ConversationPage from '../pages/ConversationPage';\r\n\r\nconst Page = () => {\r\n    return(\r\n        <>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={ProfilePage} />\r\n            <Route path=\"/friends\" exact component={FriendsPage}/>\r\n            <Route path=\"/messages\" exact component={MessagesPage}/>\r\n            <Route path=\"/search\" exact component={SearchPage}/>\r\n            <Route path=\"/login\" exact component={LoginPage}/>\r\n            <Route path=\"/user/:id\" exact component={UserDetailsPage}/>\r\n            <Route path=\"/messages/conversation/:id\" exact component={ConversationPage} />\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport '../styles/App.css';\r\nimport Header from './Header';\r\nimport Navigation from './Navigation';\r\nimport Page from './Page';\r\n\r\nexport class App extends React.Component{\r\n  render(){\r\n  return (\r\n    <Router>\r\n    <div className=\"app\">\r\n      <header>\r\n        {<Header />}\r\n      </header>\r\n      <main>\r\n        <aside>\r\n          {<Navigation />}\r\n        </aside>\r\n        <section className=\"page\">\r\n          {<Page />}\r\n        </section>\r\n      </main>\r\n    </div>\r\n  </Router>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './layouts/App';\r\nimport {Provider} from 'react-redux';\r\nimport store from './stores/configureStore';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}